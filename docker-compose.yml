
version: '3.8'

networks:
  monitoring:
    driver: bridge
    
volumes:
  prometheus_data: {}
  grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file: 
      - /grafana/variables.env
    ports:
      - 3000:3000
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf/:/usr/local/etc/redis.conf
      #- ./redis/data:/usr/local/redis/data
      #- ./redis/redis.log:/usr/local/redis/redis.log
    networks:
      - monitoring
    restart: always
    container_name: redis

 # node-exporter:
 #   image: prom/node-exporter:latest
 #   container_name: node-exporter
 #   restart: unless-stopped
 #   volumes:
 #     - /proc:/host/proc:ro
 #     - /sys:/host/sys:ro
 #     - /:/rootfs:ro
 #   command:
 #     - '--path.procfs=/host/proc'
 #     - '--path.rootfs=/rootfs'
 #     - '--path.sysfs=/host/sys'
 #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
 #   expose:
 #     - 9100
 #   networks:
 #     - monitoring
